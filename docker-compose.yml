version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: mini_me_postgres
    environment:
      POSTGRES_USER: mini_me_user
      POSTGRES_PASSWORD: mini_me_password
      POSTGRES_DB: mini_me_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mini_me_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: mini_me_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: mini_me_backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://mini_me_user:mini_me_password@postgres:5432/mini_me_db
      REDIS_URL: redis://redis:6379/0
      PYTHONUNBUFFERED: 1
    volumes:
      - ./backend:/app
      - ./ml_models:/app/ml_models
      - ./user_data:/app/user_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    container_name: mini_me_frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  celery_worker:
    build: ./backend
    container_name: mini_me_celery_worker
    environment:
      DATABASE_URL: postgresql://mini_me_user:mini_me_password@postgres:5432/mini_me_db
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./ml_models:/app/ml_models
      - ./user_data:/app/user_data
    depends_on:
      - postgres
      - redis
    command: celery -A core.celery_app worker --loglevel=info

  celery_beat:
    build: ./backend
    container_name: mini_me_celery_beat
    environment:
      DATABASE_URL: postgresql://mini_me_user:mini_me_password@postgres:5432/mini_me_db
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    command: celery -A core.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data: